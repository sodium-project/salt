name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  linux:
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:      
        os: [ubuntu-latest]
        compiler:
          - { pkg: clang, exe: 'clang++', version: 16 }

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.26.1
          ninjaVersion: 1.11.1

      - name: Install compiler
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main"
          sudo apt update
          sudo apt install -y ${{ matrix.compiler.pkg }}-${{ matrix.compiler.version }} libc++-dev libc++abi-dev

      - name: Configure
        env:
          CC: ${{ matrix.compiler.pkg }}-${{ matrix.compiler.version }}
          CXX: ${{ matrix.compiler.exe }}-${{ matrix.compiler.version }}
        run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DSALT_GRAPHICS=OpenGL -B ${{github.workspace}}/build -G Ninja

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Run tests
        working-directory: build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: ctest --timeout 30 -C Debug -j4

  windows:
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:      
        os: [windows-latest]
        compiler:
          - { pkg: clang, exe: 'clang++', version: 16 }

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.26.1
          ninjaVersion: 1.11.1

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ matrix.compiler.version }}

      - name: Configure
        env:
          CC: ${{ matrix.compiler.pkg }}
          CXX: ${{ matrix.compiler.exe }}
        run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DSALT_GRAPHICS=OpenGL -B ${{github.workspace}}/build -G Ninja

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Run tests
        working-directory: build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: ctest --timeout 30 -C Debug -j4
